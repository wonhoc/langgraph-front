import type { MenuItem } from "@/types/menu";

// 샘플 메뉴 데이터
const menuData: MenuItem[] = [
  {
    id: 1,
    name: "사용자 관리",
    description: "사용자 정보를 관리합니다",
    url: "/users",
    icon: "users",
    parentId: null,
    sortOrder: 1,
    level: 1,
    isActive: true,
    isVisible: true,
    type: "menu",
    permission: "MENU_USER_MGMT",
    config: '{"target": "_blank"}',
    createdDtm: "2025-06-11T21:57:55.129Z",
    updatedDtm: "2025-06-11T21:57:55.129Z",
    createdBy: "system",
    updatedBy: "system",
    children: [],
    hasChildren: false,
  },
  {
    id: 2,
    name: "게시판 관리",
    description: "게시판을 관리합니다",
    url: "/boards",
    icon: "layout-grid",
    parentId: null,
    sortOrder: 2,
    level: 1,
    isActive: true,
    isVisible: true,
    type: "menu",
    permission: "MENU_BOARD_MGMT",
    config: "{}",
    createdDtm: "2025-06-11T21:57:55.129Z",
    updatedDtm: "2025-06-11T21:57:55.129Z",
    createdBy: "system",
    updatedBy: "system",
    children: [
      {
        id: 3,
        name: "공지사항",
        description: "공지사항을 관리합니다",
        url: "/boards/notice",
        icon: "bell",
        parentId: 2,
        sortOrder: 1,
        level: 2,
        isActive: true,
        isVisible: true,
        type: "menu",
        permission: "MENU_NOTICE_MGMT",
        config: "{}",
        createdDtm: "2025-06-11T21:57:55.129Z",
        updatedDtm: "2025-06-11T21:57:55.129Z",
        createdBy: "system",
        updatedBy: "system",
        children: [],
        hasChildren: false,
      },
      {
        id: 4,
        name: "자유게시판",
        description: "자유게시판을 관리합니다",
        url: "/boards/free",
        icon: "message-square",
        parentId: 2,
        sortOrder: 2,
        level: 2,
        isActive: true,
        isVisible: true,
        type: "menu",
        permission: "MENU_FREE_MGMT",
        config: "{}",
        createdDtm: "2025-06-11T21:57:55.129Z",
        updatedDtm: "2025-06-11T21:57:55.129Z",
        createdBy: "system",
        updatedBy: "system",
        children: [],
        hasChildren: false,
      },
    ],
    hasChildren: true,
  },
  {
    id: 5,
    name: "시스템 설정",
    description: "시스템을 설정합니다",
    url: "/settings",
    icon: "settings",
    parentId: null,
    sortOrder: 3,
    level: 1,
    isActive: true,
    isVisible: true,
    type: "menu",
    permission: "MENU_SYSTEM_SETTINGS",
    config: "{}",
    createdDtm: "2025-06-11T21:57:55.129Z",
    updatedDtm: "2025-06-11T21:57:55.129Z",
    createdBy: "system",
    updatedBy: "system",
    children: [
      {
        id: 6,
        name: "메뉴 관리",
        description: "메뉴를 관리합니다",
        url: "/settings/menus",
        icon: "menu",
        parentId: 5,
        sortOrder: 1,
        level: 2,
        isActive: true,
        isVisible: true,
        type: "menu",
        permission: "MENU_MENU_MGMT",
        config: "{}",
        createdDtm: "2025-06-11T21:57:55.129Z",
        updatedDtm: "2025-06-11T21:57:55.129Z",
        createdBy: "system",
        updatedBy: "system",
        children: [],
        hasChildren: false,
      },
      {
        id: 7,
        name: "권한 관리",
        description: "권한을 관리합니다",
        url: "/settings/permissions",
        icon: "shield",
        parentId: 5,
        sortOrder: 2,
        level: 2,
        isActive: true,
        isVisible: true,
        type: "menu",
        permission: "MENU_PERMISSION_MGMT",
        config: "{}",
        createdDtm: "2025-06-11T21:57:55.129Z",
        updatedDtm: "2025-06-11T21:57:55.129Z",
        createdBy: "system",
        updatedBy: "system",
        children: [],
        hasChildren: false,
      },
    ],
    hasChildren: true,
  },
  {
    id: 8,
    name: "통계",
    description: "통계를 확인합니다",
    url: "/statistics",
    icon: "bar-chart-3",
    parentId: null,
    sortOrder: 4,
    level: 1,
    isActive: true,
    isVisible: true,
    type: "menu",
    permission: "MENU_STATISTICS",
    config: "{}",
    createdDtm: "2025-06-11T21:57:55.129Z",
    updatedDtm: "2025-06-11T21:57:55.129Z",
    createdBy: "system",
    updatedBy: "system",
    children: [],
    hasChildren: false,
  },
];

// 메뉴 데이터를 가져오는 함수
export async function getMenus(): Promise<MenuItem[]> {
  // 실제로는 API 호출을 통해 데이터를 가져올 수 있습니다
  // const response = await fetch('/api/menus')
  // const data = await response.json()
  // return data

  // 샘플 데이터 반환
  return menuData;
}

// 권한 체크 함수 (실제 구현은 인증 시스템에 따라 다를 수 있음)
export function hasPermission(permission: string): boolean {
  // 실제로는 사용자의 권한을 확인하는 로직이 필요합니다
  // 예시로 모든 권한을 허용하도록 설정
  return true;
}
